#!/bin/bash

function PrintHelp () {
	echo "Usage : gt [path]"
    echo "  or:   gt -d "
    echo "  or:   gt -h"
    echo -e "\n\t-d\tdebug mode"
    echo -e "\t-h\tdisplay this help and exit"
	exit 0
}

function Error () {
	echo "Error - Syntax invalid. --help or -h for help"
	exit $1	
}

#echo for debug
function echod () {
	if [ "$Debug" = "True" ]
	then
		echo "$*"
	fi
}

# Check args
function CheckArgs () {
	case $1 in
		--help|-h)
			PrintHelp
			;;
		-d)
			Debug="True"
			return 1
			;;
	esac
	return 0
}

#CheckPath:
#remove the last "/" if contain last "/"
#return: $PathFormatted
function CheckPath () {
	if [ "${Path:${#Path}-1:1}" = "/" ]
	then
		PathFormatted=$(echo "$Path" | sed 's/.$//')
	else
		PathFormatted="$Path"
	fi
}

## ---- Main program ----

# Variables declarations
Debug="False"
Path=""
PathFormatted=""
PathFinal=""
ListDir=""

CheckArgs "$1"
if [ $? -eq 1 ]
then
	echod "shift"
	shift
fi

Path="$*"
echod "read : $Path"

case $Path in
	".."*)
		echo "$Path"
		exit 0
		;;
	"./*")
		echo "$Path"
		exit 0
		;;
	"")
		echo "$HOME"
		exit 0
		;;
	"/")
		echo "/"
		exit 0
		;;
	"-")
		echo "-"
		exit 0
		;;
	#[!"$HOME"]*)
	#	echo "$Path"
	#	exit 0
	#	;;
esac

CheckPath 
echod "PathFormatted: $PathFormatted"

#research directory $1
ListDir=$(find $PWD -mindepth 1 -maxdepth 4 -type d \( -name '.*' -prune -o -print \) | grep -i "$PathFormatted")

echod "$ListDir"

if [ "$ListDir" = "" ]
then
	exit 0
fi

#save IFS
OldIFS=$IFS
IFS=$'\n'

NbrDir=$(echo "$ListDir" | wc -l)
Arr=($ListDir)
FirstElement=${Arr[0]}
Length=$((${#FirstElement}+1))
echod "$FirstElement  $Length"
Position=0
PositionDir=0
echod "------------------"

for Dir in $ListDir
do
	Position=$(($Position + 1))
	echod "$Position  - ${#Dir} - $Dir"
	LengthDir=${#Dir}
	if [ $LengthDir -lt $Length ]
	then
		echod "$LengthDir < $Length" 
		Length=$LengthDir
		PositionDir=$Position
	fi
done

IFS=$OldIFS

echod ${Arr[$PositionDir-1]}

#echo "-> $PositionDir : ${Arr[$PositionDir-1]}"
#Final=$(echo "${Arr[$PositionDir-1]}" | sed 's/ /\\ /g')
PathFinal=$(echo "${Arr[$PositionDir-1]}")
echo "$PathFinal"
#echo "\"${Arr[$PositionDir-1]}\""